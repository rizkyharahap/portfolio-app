(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "prop-types", "./context", "./hooks"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("prop-types"), require("./context"), require("./hooks"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes, global.context, global.hooks);
    global.FormBuilder = mod.exports;
  }
})(this, function (_exports, _react, _propTypes, _context, _hooks) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _react = _interopRequireWildcard(_react);
  _propTypes = _interopRequireDefault(_propTypes);
  _context = _interopRequireDefault(_context);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

  function generateRandomName() {
    return "_".concat(Math.random().toString(36).substr(2, 9));
  }

  function FormBuilder(props) {
    var children = props.children,
        destroyOnUnmount = props.destroyOnUnmount,
        enableReinitialize = props.enableReinitialize,
        initialValues = props.initialValues,
        keepDirtyOnReinitialize = props.keepDirtyOnReinitialize,
        nameFromProps = props.name,
        onChange = props.onChange,
        visitOnBlur = props.visitOnBlur,
        visitOnChange = props.visitOnChange,
        validate = props.validate;
    var isFirstReInit = (0, _react.useRef)(true);
    var nameRef = (0, _react.useRef)(nameFromProps || generateRandomName());
    var name = nameRef.current;
    var form = (0, _hooks.useFormApi)(name);
    var context = {
      name: name,
      form: form
    };

    if (!form.isInitialized() && initialValues) {
      form.setInitialValues(initialValues);
    }

    form.setProps(props);
    (0, _react.useLayoutEffect)(function () {
      if (initialValues) {
        form.initialize(initialValues);
      }

      return function () {
        if (destroyOnUnmount) {
          form.destroy();
        }
      };
    }, [name]); // Handle re-initialize

    (0, _react.useLayoutEffect)(function () {
      if (isFirstReInit.current) {
        isFirstReInit.current = false;
      } else if (enableReinitialize && initialValues) {
        form.initialize(initialValues, keepDirtyOnReinitialize);
      }
    }, [name, initialValues]);
    return _react.default.createElement(_context.default.Provider, {
      value: context
    }, children);
  }

  FormBuilder.propTypes = {
    destroyOnUnmount: _propTypes.default.bool,
    enableReinitialize: _propTypes.default.bool,
    initialValues: _propTypes.default.object,
    // keepDirtyOnReinitialize: PropTypes.bool, // @TODO:
    name: _propTypes.default.string,
    // onChange: PropTypes.func, // @TODO:
    validate: _propTypes.default.func,
    visitOnBlur: _propTypes.default.bool,
    visitOnChange: _propTypes.default.bool
  };
  FormBuilder.defaultProps = {
    enableReinitialize: false,
    destroyOnUnmount: true,
    keepDirtyOnReinitialize: false,
    visitOnBlur: true,
    visitOnChange: false
  };

  var _default = (0, _react.memo)(FormBuilder);

  _exports.default = _default;
});