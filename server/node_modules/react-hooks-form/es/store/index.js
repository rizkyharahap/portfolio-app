(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "./api", "./watch"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("./api"), require("./watch"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.api, global.watch);
    global.index = mod.exports;
  }
})(this, function (_exports, _api, _watch) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = getStore;
  _api = _interopRequireDefault(_api);
  _watch = _interopRequireDefault(_watch);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function getStore() {
    if (typeof window.REACT_HOOKS_FORM === 'undefined') {
      var store = {
        forms: {}
      };

      var _createListeners = (0, _watch.default)(),
          notifyWatchers = _createListeners.notifyWatchers,
          watch = _createListeners.watch;

      window.REACT_HOOKS_FORM = {
        form: function form(formName) {
          if (!store.forms[formName]) {
            store.forms[formName] = {
              state: {
                fields: {},
                lastInitializedValues: {},
                props: {},
                meta: {
                  submitFailed: false,
                  submitSucceeded: false,
                  submitting: false
                },
                values: {}
              }
            };
            store.forms[formName].api = (0, _api.default)({
              formName: formName,
              formState: store.forms[formName].state,
              notifyWatchers: notifyWatchers,
              onDestroy: function onDestroy() {
                delete store.forms[formName];
              },
              watch: watch
            });
          }

          return store.forms[formName].api;
        }
      };
    }

    return window.REACT_HOOKS_FORM;
  }
});