(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react", "prop-types", "./FormBuilder", "./hooks"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"), require("prop-types"), require("./FormBuilder"), require("./hooks"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes, global.FormBuilder, global.hooks);
    global.Form = mod.exports;
  }
})(this, function (_exports, _react, _propTypes, _FormBuilder, _hooks) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = void 0;
  _react = _interopRequireWildcard(_react);
  _propTypes = _interopRequireDefault(_propTypes);
  _FormBuilder = _interopRequireDefault(_FormBuilder);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

  function Fields(props) {
    var children = props.children,
        className = props.className,
        onSubmit = props.onSubmit,
        onSubmitComplete = props.onSubmitComplete,
        onSubmitFail = props.onSubmitFail,
        onSubmitSucceed = props.onSubmitSucceed;
    var form = (0, _hooks.useFormApi)();

    function handleSubmit(event) {
      event.preventDefault();
      form.submit(onSubmit, {
        onComplete: onSubmitComplete,
        onFail: onSubmitFail,
        onSucceed: onSubmitSucceed
      });
    }

    return _react.default.createElement("form", {
      className: className,
      onSubmit: handleSubmit
    }, children);
  }

  function Form(props) {
    return _react.default.createElement(_FormBuilder.default, props, _react.default.createElement(Fields, props));
  }

  Form.propTypes = {
    className: _propTypes.default.string,
    destroyOnUnmount: _propTypes.default.bool,
    enableReinitialize: _propTypes.default.bool,
    initialValues: _propTypes.default.object,
    // keepDirtyOnReinitialize: PropTypes.bool, // @TODO:
    name: _propTypes.default.string,
    onSubmit: _propTypes.default.func.isRequired,
    onSubmitComplete: _propTypes.default.func,
    onSubmitFail: _propTypes.default.func,
    onSubmitSucceed: _propTypes.default.func,
    // onChange: PropTypes.func, // @TODO:
    validate: _propTypes.default.func,
    visitOnBlur: _propTypes.default.bool,
    visitOnChange: _propTypes.default.bool
  };
  Form.defaultProps = {
    enableReinitialize: false,
    destroyOnUnmount: true,
    keepDirtyOnReinitialize: false,
    visitOnBlur: true,
    visitOnChange: false
  };

  var _default = (0, _react.memo)(Form);

  _exports.default = _default;
});